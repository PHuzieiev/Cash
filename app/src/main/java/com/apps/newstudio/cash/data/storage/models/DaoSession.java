package com.apps.newstudio.cash.data.storage.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.apps.newstudio.cash.data.storage.models.CurrenciesEntity;
import com.apps.newstudio.cash.data.storage.models.OrganizationsEntity;
import com.apps.newstudio.cash.data.storage.models.TemplateEntity;

import com.apps.newstudio.cash.data.storage.models.CurrenciesEntityDao;
import com.apps.newstudio.cash.data.storage.models.OrganizationsEntityDao;
import com.apps.newstudio.cash.data.storage.models.TemplateEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig currenciesEntityDaoConfig;
    private final DaoConfig organizationsEntityDaoConfig;
    private final DaoConfig templateEntityDaoConfig;

    private final CurrenciesEntityDao currenciesEntityDao;
    private final OrganizationsEntityDao organizationsEntityDao;
    private final TemplateEntityDao templateEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        currenciesEntityDaoConfig = daoConfigMap.get(CurrenciesEntityDao.class).clone();
        currenciesEntityDaoConfig.initIdentityScope(type);

        organizationsEntityDaoConfig = daoConfigMap.get(OrganizationsEntityDao.class).clone();
        organizationsEntityDaoConfig.initIdentityScope(type);

        templateEntityDaoConfig = daoConfigMap.get(TemplateEntityDao.class).clone();
        templateEntityDaoConfig.initIdentityScope(type);

        currenciesEntityDao = new CurrenciesEntityDao(currenciesEntityDaoConfig, this);
        organizationsEntityDao = new OrganizationsEntityDao(organizationsEntityDaoConfig, this);
        templateEntityDao = new TemplateEntityDao(templateEntityDaoConfig, this);

        registerDao(CurrenciesEntity.class, currenciesEntityDao);
        registerDao(OrganizationsEntity.class, organizationsEntityDao);
        registerDao(TemplateEntity.class, templateEntityDao);
    }
    
    public void clear() {
        currenciesEntityDaoConfig.clearIdentityScope();
        organizationsEntityDaoConfig.clearIdentityScope();
        templateEntityDaoConfig.clearIdentityScope();
    }

    public CurrenciesEntityDao getCurrenciesEntityDao() {
        return currenciesEntityDao;
    }

    public OrganizationsEntityDao getOrganizationsEntityDao() {
        return organizationsEntityDao;
    }

    public TemplateEntityDao getTemplateEntityDao() {
        return templateEntityDao;
    }

}
